{"name":"Ws transactions","body":"# Transactions for OpenERP webservices\r\n\r\n\r\n### Commit example\r\n\r\n```python\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nimport xmlrpclib\r\n\r\nHOST = 'localhost'\r\nPORT = 8069\r\nUSER = 'admin'\r\nPASS = 'admin'\r\nDBNAME = 'openerp'\r\n\r\ndef run_test():\r\n    sock = xmlrpclib.ServerProxy('http://%s:%d/xmlrpc/common' % (HOST, PORT))\r\n    uid = sock.login(DBNAME, USER, PASS)\r\n    sock = xmlrpclib.ServerProxy('http://%s:%d/xmlrpc/ws_transaction'\r\n                                 % (HOST, PORT))\r\n    print \"UID: %s PASS: %s\" % (uid, PASS)\r\n    tid = sock.begin(DBNAME, uid, PASS)\r\n    print \"Opening transaction %s...\" % tid\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print before write\", partner1[0]\r\n    sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'write', [1],\r\n                 {'name': '%s mod' % partner1[0]['name']})\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print after write\", partner1[0]\r\n    print \"Commit!\"\r\n    sock.commit(DBNAME, uid, PASS, tid)\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print after commit\", partner1[0]\r\n    print \"Clossing...\"\r\n    sock.close(DBNAME, uid, PASS, tid)\r\n\r\nif __name__ == \"__main__\":\r\n    run_test()\r\n```\r\n\r\n### Rollback example\r\n\r\n```python\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nimport xmlrpclib\r\n\r\nHOST = 'localhost'\r\nPORT = 8069\r\nUSER = 'admin'\r\nPASS = 'admin'\r\nDBNAME = 'openerp'\r\n\r\ndef run_test():\r\n    sock = xmlrpclib.ServerProxy('http://%s:%d/xmlrpc/common' % (HOST, PORT))\r\n    uid = sock.login(DBNAME, USER, PASS)\r\n    sock = xmlrpclib.ServerProxy('http://%s:%d/xmlrpc/ws_transaction'\r\n                                 % (HOST, PORT))\r\n    print \"UID: %s PASS: %s\" % (uid, PASS)\r\n    tid = sock.begin(DBNAME, uid, PASS)\r\n    print \"Opening transaction %s...\" % tid\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print before write\", partner1[0]\r\n    sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'write', [1],\r\n                 {'name': '%s mod' % partner1[0]['name']})\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print after write\", partner1[0]\r\n    print \"Rollback!\"\r\n    sock.rollback(DBNAME, uid, PASS, tid)\r\n    partner1 = sock.execute(DBNAME, uid, PASS, tid, 'res.partner', 'read', [1],\r\n                            ['name'])\r\n    print \"Print after rollback\", partner1[0]\r\n    print \"Clossing...\"\r\n    sock.close(DBNAME, uid, PASS, tid)\r\n\r\nif __name__ == \"__main__\":\r\n    run_test()\r\n```","tagline":"WebServices Transactions for OpenObject","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}